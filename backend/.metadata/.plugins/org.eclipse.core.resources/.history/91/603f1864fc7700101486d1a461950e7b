package com.example.backend.service;

import com.example.backend.model.User;
import com.example.backend.model.DashboardItem;
import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import org.springframework.stereotype.Service;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service
public class DataService {
    private final ObjectMapper mapper = new ObjectMapper();

    // -------- USERS --------
    public List<User> getUsersFromDb() throws IOException {
        URL resource = getClass().getClassLoader().getResource("db.json");
        if (resource == null) throw new IOException("db.json not found");
        Map<String, List<User>> map = mapper.readValue(new File(resource.getFile()),
                new TypeReference<Map<String, List<User>>>() {});
        return map.getOrDefault("users", List.of());
    }

    public void saveUsersToDb(List<User> users) throws IOException {
        URL resource = getClass().getClassLoader().getResource("db.json");
        if (resource == null) throw new IOException("db.json not found");
        Map<String, List<User>> map = new HashMap<>();
        map.put("users", users);
        mapper.writerWithDefaultPrettyPrinter().writeValue(new File(resource.getFile()), map);
    }

    // -------- DETAILS --------
    public List<DashboardItem> getDetailsFromDb() throws IOException {
        URL resource = getClass().getClassLoader().getResource("details.json");
        if (resource == null) throw new IOException("details.json not found");
        Map<String, List<DashboardItem>> map = mapper.readValue(new File(resource.getFile()),
                new TypeReference<Map<String, List<DashboardItem>>>() {});
        return map.getOrDefault("details", List.of());
    }

    public void saveDetailsToDb(List<DashboardItem> details) throws IOException {
        URL resource = getClass().getClassLoader().getResource("details.json");
        if (resource == null) throw new IOException("details.json not found");
        Map<String, List<DashboardItem>> map = new HashMap<>();
        map.put("details", details);
        mapper.writerWithDefaultPrettyPrinter().writeValue(new File(resource.getFile()), map);
    }
}
